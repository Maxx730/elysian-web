{"ast":null,"code":"import _classCallCheck from \"/Users/ddcjkinghorn/git/elysian-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ddcjkinghorn/git/elysian-web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ddcjkinghorn/git/elysian-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ddcjkinghorn/git/elysian-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ddcjkinghorn/git/elysian-web/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ddcjkinghorn/git/elysian-web/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css'; //Since we do not want the canvas to constantly rerender,\n//it will be the only HTML element inside of this component.\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      Window: {\n        width: 0,\n        height: 0\n      },\n      //Grab the canvas element.\n      Canvas: null\n    };\n    return _this;\n  } //On Page load we want to grab the width and\n  //height of the window so the canvas will be\n  //the size of the window.\n\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        Window: {\n          width: window.innerWidth,\n          height: window.innerHeight\n        },\n        Canvas: this.refs.ElysianCanvas\n      }, function () {\n        //Here we are going to set up our initial canvas.\n        var context = _this2.state.Canvas.getContext(\"2d\");\n\n        context.rect(200, 200, 200, 200);\n        context.stroke();\n        window.setTimeout(function () {\n          console.log(\"testing animation\");\n        }, 1000 / 60);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        ref: \"ElysianCanvas\",\n        width: this.state.Window.width,\n        height: this.state.Window.height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/ddcjkinghorn/git/elysian-web/src/App.js"],"names":["React","Component","App","props","state","Window","width","height","Canvas","setState","window","innerWidth","innerHeight","refs","ElysianCanvas","context","getContext","rect","stroke","setTimeout","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP,C,CAGA;AACA;;IACMC,G;;;;;AACJ,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,6EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAC;AACLC,QAAAA,KAAK,EAAC,CADD;AAELC,QAAAA,MAAM,EAAC;AAFF,OADI;AAKX;AACAC,MAAAA,MAAM,EAAC;AANI,KAAb;AAHgB;AAWjB,G,CAED;AACA;AACA;;;;;wCACmB;AAAA;;AACjB,WAAKC,QAAL,CAAc;AACZJ,QAAAA,MAAM,EAAC;AACLC,UAAAA,KAAK,EAACI,MAAM,CAACC,UADR;AAELJ,UAAAA,MAAM,EAACG,MAAM,CAACE;AAFT,SADK;AAKZJ,QAAAA,MAAM,EAAC,KAAKK,IAAL,CAAUC;AALL,OAAd,EAME,YAAM;AACN;AACA,YAAIC,OAAO,GAAG,MAAI,CAACX,KAAL,CAAWI,MAAX,CAAkBQ,UAAlB,CAA6B,IAA7B,CAAd;;AACAD,QAAAA,OAAO,CAACE,IAAR,CAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB;AACAF,QAAAA,OAAO,CAACG,MAAR;AAEAR,QAAAA,MAAM,CAACS,UAAP,CAAkB,YAAM;AACtBC,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,SAFD,EAEG,OAAO,EAFV;AAGD,OAfD;AAgBD;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,GAAG,EAAC,eAAZ;AAA4B,QAAA,KAAK,EAAG,KAAKjB,KAAL,CAAWC,MAAX,CAAkBC,KAAtD;AAA8D,QAAA,MAAM,EAAG,KAAKF,KAAL,CAAWC,MAAX,CAAkBE,MAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAOD;;;;EA5CeN,S;;AA+ClB,eAAeC,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n\n//Since we do not want the canvas to constantly rerender,\n//it will be the only HTML element inside of this component.\nclass App extends Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      Window:{\n        width:0,\n        height:0\n      },\n      //Grab the canvas element.\n      Canvas:null\n    }\n  }\n\n  //On Page load we want to grab the width and\n  //height of the window so the canvas will be\n  //the size of the window.\n  componentDidMount(){\n    this.setState({\n      Window:{\n        width:window.innerWidth,\n        height:window.innerHeight\n      },\n      Canvas:this.refs.ElysianCanvas\n    },() => {\n      //Here we are going to set up our initial canvas.\n      let context = this.state.Canvas.getContext(\"2d\")\n      context.rect(200,200,200,200)\n      context.stroke()\n\n      window.setTimeout(() => {\n        console.log(\"testing animation\")\n      },(1000 / 60))\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <canvas ref=\"ElysianCanvas\" width={ this.state.Window.width } height={ this.state.Window.height }>\n\n        </canvas>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}